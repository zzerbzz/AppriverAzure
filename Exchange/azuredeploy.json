{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
	"exchangeStorageSizeInGB": {
            "type": "int",
            "defaultValue": 10,
            "metadata": {
                "description": "Exchange Mailbox storage size in GB."
            }
        },
    "vmAdminUsername": {
        "type": "string",
        "metadata": {
            "description": "The name of the administrator account of the new VM and domain"
            }
        },
    "vmAdminPassword": {
        "type": "securestring",
        "metadata": {
            "description": "The password for the administrator account of the new VM and domain"
            }
        },
    "exchangeDomainName": {
            "type": "string",
            "metadata": {
                "description": "Domain Name you want to use."
                }
            }
    },

    "variables": {
        "exchangeVMCount": 1,
        "imagePublisher": "MicrosoftWindowsServer",
        "imageOffer": "WindowsServer",
        "addressPrefix": "10.80.26.0/23",
        "storageAccountType": "Standard_LRS",
        "publicIPAddressName": "[tolower(concat('ip', resourceGroup().name))]",
        "publicIPAddressType": "Dynamic",
        "subnetPrefix": "10.80.26.0/23",
        "subnetName": "ad-servicesubnet",
        "uniqueDnsNameForPublicIP": "[tolower(concat('dns', resourceGroup().name))]",
        "uniqueStorageAccountName": "[tolower(concat('exdevsa',uniqueString(resourceGroup().id)))]",
        "uniqueStorageAccountContainerName": "[tolower(concat('exdevsc',uniqueString(resourceGroup().id)))]",
        "location": "[resourceGroup().location]",
        "vmOsSku": "2019-Datacenter",
        "vmName": "exdevVM",
        "vmOsDiskName": "[concat('od', resourceGroup().name)]",
        "vmDataDiskName": "[concat('dd', resourceGroup().name)]",
        "vmSize": "Standard_D4_v3",
        "vmDataDiskSize": "15",
        "vmNicName": "[tolower(concat('nic', resourceGroup().name))]",
        "vNetNewOrExisting": "existing",
        "virtualNetworkName": "aazeastus-appslab-vnet",
        "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
        "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
        "modulesPath": "https://raw.githubusercontent.com/zzerbzz/AppriverAzure/master/Exchange/",
        "modulesExchange": "ExchangeWorkload.zip",
        "modulesUrlExchange": "[concat(variables('modulesPath'),variables('modulesExchange'))]",
        "modulesExchangeData": "ExchangeWorkload.psd1",
        "modulesUrlExchangeData": "[concat(variables('modulesPath'),variables('modulesExchangeData'))]",
        "configurationFunctionExchange": "ExchangeWorkload.ps1\\InstallAndConfigureExchange",
        "exchangeInstallerPath": "InstallerExchange",
        "exchangeISOUri": "https://downloadscfa.blob.core.windows.net/downloads/Exchange/ExchangeServer2019-x64-CU2.iso",
        "modulesExchangeISODownload": "CSDownloadISO.ps1",
        "modulesUrlExchangeISODownload": "[concat(variables('modulesPath'),variables('modulesExchangeISODownload'))]"
    },
    "resources": [
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[tolower(variables('uniqueStorageAccountName'))]",
            "location": "[variables('location')]",
            "properties": {
                "accountType": "[variables('storageAccountType')]"
            }
        },
        {
            "apiVersion": "2018-04-01",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('VMNicName')]",
            "location": "[variables('location')]",
            "properties": {
                "ipConfigurations": [
                {
                    "name": "ipconfig1",
                    "properties": {
                    "privateIPAllocationMethod": "Dynamic",
                    "publicIPAddress": {
                        "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]"
                    },
                    "subnet": {
                        "id": "[variables('subnetRef')]"
                    }
                    }
                }
                ]
            }
        },
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat(variables('vmName'),copyIndex())]",
            "location": "[variables('location')]",
            "copy": {
                "name": "vmLoop",
                "count": "[variables('exchangeVMCount')]"
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[variables('vmSize')]"
                },
                "osProfile": {
                    "computerName": "[variables('vmName')]",
                    "adminUsername": "[parameters('vmAdminUsername')]",
                    "adminPassword": "[parameters('vmAdminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('imagePublisher')]",
                        "offer": "[variables('imageOffer')]",
                        "sku": "[variables('vmOsSku')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "osdisk",
                        "vhd": {
                            "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('uniqueStorageAccountName')),providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob,variables('uniqueStorageAccountContainerName'),'/',variables('vmOsDiskName'),copyIndex(),'.vhd')]"
                        },
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    },
                    "dataDisks": [
                        {
                            "vhd": {
                                "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('uniqueStorageAccountName')),providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob,variables('uniqueStorageAccountContainerName'),'/',variables('vmDataDiskName'),copyIndex(),'-0','.vhd')]"
                            },
                            "name": "[concat(variables('vmDataDiskName'),copyIndex(),'-0')]",
                            "createOption": "Empty",
                            "caching": "None",
                            "diskSizeGB": "[variables('vmDataDiskSize')]",
                            "lun": 0
                        },
                        {
                            "vhd": {
                                "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('uniqueStorageAccountName')),providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob,variables('uniqueStorageAccountContainerName'),'/',variables('vmDataDiskName'),copyIndex(),'-1','.vhd')]"
                            },
                            "name": "[concat(variables('vmDataDiskName'),copyIndex(),'-1')]",
                            "createOption": "Empty",
                            "caching": "None",
                            "diskSizeGB": "[variables('vmDataDiskSize')]",
                            "lun": 1
                        }
                    ]
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                        "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('vmNicName'))]"
                        }
                    ]
                }
            }
        },
		{
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(variables('vmName'),copyIndex(),'/CustomScriptExtension')]",
            "location": "[variables('location')]",
            "copy": {
                "name": "customExtensionLoop",
                "count": "[variables('exchangeVMCount')]"
            },
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/',variables('vmName'),copyIndex())]"
            ],
            "properties": {
                "publisher": "Microsoft.Compute",
                "type": "CustomScriptExtension",
                "typeHandlerVersion": "1.4",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "fileUris": [
                        "[variables('modulesUrlExchangeISODownload')]"
                    ],
                    "commandToExecute": "[concat('powershell -ExecutionPolicy Unrestricted -file ',variables('modulesExchangeISODownload'),' -uri ',variables('exchangeISOUri'),' -destination ',variables('exchangeInstallerPath'))]"
                }
            }
        },
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(variables('vmName'),copyIndex(),'/dscExtension')]",
            "location": "[variables('location')]",
            "copy": {
                "name": "extensionLoop",
                "count": "[variables('exchangeVMCount')]"
            },
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/',variables('vmName'),copyIndex())]",
				"[concat('Microsoft.Compute/virtualMachines/',variables('vmName'),copyIndex(),'/extensions/','CustomScriptExtension')]"
            ],
            "properties": {
                "publisher": "Microsoft.Powershell",
                "type": "DSC",
                "typeHandlerVersion": "2.15",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "modulesUrl": "[variables('modulesUrlExchange')]",
                    "configurationFunction": "[variables('configurationFunctionExchange')]",
                    "properties": {
                        "DomainName": "[parameters('exchangeDomainName')]",
                        "StorageSize": "[parameters('exchangeStorageSizeInGB')]",
                        "VMAdminCreds": {
                            "userName": "[parameters('vmAdminUsername')]",
                            "password": "PrivateSettingsRef:vmAdminPassword"
                        },
                        "Location": "[variables('location')]"
                    }
                },
                "protectedSettings": {
                    "items": {
                        "vmAdminPassword": "[parameters('vmAdminPassword')]"
                    },
                    "DataBlobUri": "[variables('modulesUrlExchangeData')]"
                }
            }
        }
    ]
}